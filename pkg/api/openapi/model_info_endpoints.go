/*
ShellHub Community

ShellHub Community documentation.  It documents all routes provided by ShellHub Community.   NOTICE: THE API IS NOT STABLE YET; ERROR AND INCONSISTENCIES MAY OCCUR. 

API version: 0.1.0
Contact: contato@ossystems.com.br
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InfoEndpoints struct for InfoEndpoints
type InfoEndpoints struct {
	// SSH endpoint.
	Ssh *string `json:"ssh,omitempty"`
	// API endpoint.
	Api *string `json:"api,omitempty"`
}

// NewInfoEndpoints instantiates a new InfoEndpoints object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInfoEndpoints() *InfoEndpoints {
	this := InfoEndpoints{}
	return &this
}

// NewInfoEndpointsWithDefaults instantiates a new InfoEndpoints object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInfoEndpointsWithDefaults() *InfoEndpoints {
	this := InfoEndpoints{}
	return &this
}

// GetSsh returns the Ssh field value if set, zero value otherwise.
func (o *InfoEndpoints) GetSsh() string {
	if o == nil || o.Ssh == nil {
		var ret string
		return ret
	}
	return *o.Ssh
}

// GetSshOk returns a tuple with the Ssh field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InfoEndpoints) GetSshOk() (*string, bool) {
	if o == nil || o.Ssh == nil {
		return nil, false
	}
	return o.Ssh, true
}

// HasSsh returns a boolean if a field has been set.
func (o *InfoEndpoints) HasSsh() bool {
	if o != nil && o.Ssh != nil {
		return true
	}

	return false
}

// SetSsh gets a reference to the given string and assigns it to the Ssh field.
func (o *InfoEndpoints) SetSsh(v string) {
	o.Ssh = &v
}

// GetApi returns the Api field value if set, zero value otherwise.
func (o *InfoEndpoints) GetApi() string {
	if o == nil || o.Api == nil {
		var ret string
		return ret
	}
	return *o.Api
}

// GetApiOk returns a tuple with the Api field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InfoEndpoints) GetApiOk() (*string, bool) {
	if o == nil || o.Api == nil {
		return nil, false
	}
	return o.Api, true
}

// HasApi returns a boolean if a field has been set.
func (o *InfoEndpoints) HasApi() bool {
	if o != nil && o.Api != nil {
		return true
	}

	return false
}

// SetApi gets a reference to the given string and assigns it to the Api field.
func (o *InfoEndpoints) SetApi(v string) {
	o.Api = &v
}

func (o InfoEndpoints) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Ssh != nil {
		toSerialize["ssh"] = o.Ssh
	}
	if o.Api != nil {
		toSerialize["api"] = o.Api
	}
	return json.Marshal(toSerialize)
}

type NullableInfoEndpoints struct {
	value *InfoEndpoints
	isSet bool
}

func (v NullableInfoEndpoints) Get() *InfoEndpoints {
	return v.value
}

func (v *NullableInfoEndpoints) Set(val *InfoEndpoints) {
	v.value = val
	v.isSet = true
}

func (v NullableInfoEndpoints) IsSet() bool {
	return v.isSet
}

func (v *NullableInfoEndpoints) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInfoEndpoints(val *InfoEndpoints) *NullableInfoEndpoints {
	return &NullableInfoEndpoints{value: val, isSet: true}
}

func (v NullableInfoEndpoints) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInfoEndpoints) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


