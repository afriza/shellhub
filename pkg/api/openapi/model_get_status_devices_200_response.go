/*
ShellHub Community

ShellHub Community documentation.  It documents all routes provided by ShellHub Community.   NOTICE: THE API IS NOT STABLE YET; ERROR AND INCONSISTENCIES MAY OCCUR. 

API version: 0.1.0
Contact: contato@ossystems.com.br
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// GetStatusDevices200Response struct for GetStatusDevices200Response
type GetStatusDevices200Response struct {
	// Number of registered devices
	RegisteredDevices *int32 `json:"registered_devices,omitempty"`
	// Number of online devices
	OnlineDevices *int32 `json:"online_devices,omitempty"`
	// Number of pending devices
	PendingDevices *int32 `json:"pending_devices,omitempty"`
	// Number of rejected devices
	RejectedDevices *int32 `json:"rejected_devices,omitempty"`
	// Active sessions
	ActiveSessions *int32 `json:"active_sessions,omitempty"`
}

// NewGetStatusDevices200Response instantiates a new GetStatusDevices200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetStatusDevices200Response() *GetStatusDevices200Response {
	this := GetStatusDevices200Response{}
	return &this
}

// NewGetStatusDevices200ResponseWithDefaults instantiates a new GetStatusDevices200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetStatusDevices200ResponseWithDefaults() *GetStatusDevices200Response {
	this := GetStatusDevices200Response{}
	return &this
}

// GetRegisteredDevices returns the RegisteredDevices field value if set, zero value otherwise.
func (o *GetStatusDevices200Response) GetRegisteredDevices() int32 {
	if o == nil || o.RegisteredDevices == nil {
		var ret int32
		return ret
	}
	return *o.RegisteredDevices
}

// GetRegisteredDevicesOk returns a tuple with the RegisteredDevices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetStatusDevices200Response) GetRegisteredDevicesOk() (*int32, bool) {
	if o == nil || o.RegisteredDevices == nil {
		return nil, false
	}
	return o.RegisteredDevices, true
}

// HasRegisteredDevices returns a boolean if a field has been set.
func (o *GetStatusDevices200Response) HasRegisteredDevices() bool {
	if o != nil && o.RegisteredDevices != nil {
		return true
	}

	return false
}

// SetRegisteredDevices gets a reference to the given int32 and assigns it to the RegisteredDevices field.
func (o *GetStatusDevices200Response) SetRegisteredDevices(v int32) {
	o.RegisteredDevices = &v
}

// GetOnlineDevices returns the OnlineDevices field value if set, zero value otherwise.
func (o *GetStatusDevices200Response) GetOnlineDevices() int32 {
	if o == nil || o.OnlineDevices == nil {
		var ret int32
		return ret
	}
	return *o.OnlineDevices
}

// GetOnlineDevicesOk returns a tuple with the OnlineDevices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetStatusDevices200Response) GetOnlineDevicesOk() (*int32, bool) {
	if o == nil || o.OnlineDevices == nil {
		return nil, false
	}
	return o.OnlineDevices, true
}

// HasOnlineDevices returns a boolean if a field has been set.
func (o *GetStatusDevices200Response) HasOnlineDevices() bool {
	if o != nil && o.OnlineDevices != nil {
		return true
	}

	return false
}

// SetOnlineDevices gets a reference to the given int32 and assigns it to the OnlineDevices field.
func (o *GetStatusDevices200Response) SetOnlineDevices(v int32) {
	o.OnlineDevices = &v
}

// GetPendingDevices returns the PendingDevices field value if set, zero value otherwise.
func (o *GetStatusDevices200Response) GetPendingDevices() int32 {
	if o == nil || o.PendingDevices == nil {
		var ret int32
		return ret
	}
	return *o.PendingDevices
}

// GetPendingDevicesOk returns a tuple with the PendingDevices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetStatusDevices200Response) GetPendingDevicesOk() (*int32, bool) {
	if o == nil || o.PendingDevices == nil {
		return nil, false
	}
	return o.PendingDevices, true
}

// HasPendingDevices returns a boolean if a field has been set.
func (o *GetStatusDevices200Response) HasPendingDevices() bool {
	if o != nil && o.PendingDevices != nil {
		return true
	}

	return false
}

// SetPendingDevices gets a reference to the given int32 and assigns it to the PendingDevices field.
func (o *GetStatusDevices200Response) SetPendingDevices(v int32) {
	o.PendingDevices = &v
}

// GetRejectedDevices returns the RejectedDevices field value if set, zero value otherwise.
func (o *GetStatusDevices200Response) GetRejectedDevices() int32 {
	if o == nil || o.RejectedDevices == nil {
		var ret int32
		return ret
	}
	return *o.RejectedDevices
}

// GetRejectedDevicesOk returns a tuple with the RejectedDevices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetStatusDevices200Response) GetRejectedDevicesOk() (*int32, bool) {
	if o == nil || o.RejectedDevices == nil {
		return nil, false
	}
	return o.RejectedDevices, true
}

// HasRejectedDevices returns a boolean if a field has been set.
func (o *GetStatusDevices200Response) HasRejectedDevices() bool {
	if o != nil && o.RejectedDevices != nil {
		return true
	}

	return false
}

// SetRejectedDevices gets a reference to the given int32 and assigns it to the RejectedDevices field.
func (o *GetStatusDevices200Response) SetRejectedDevices(v int32) {
	o.RejectedDevices = &v
}

// GetActiveSessions returns the ActiveSessions field value if set, zero value otherwise.
func (o *GetStatusDevices200Response) GetActiveSessions() int32 {
	if o == nil || o.ActiveSessions == nil {
		var ret int32
		return ret
	}
	return *o.ActiveSessions
}

// GetActiveSessionsOk returns a tuple with the ActiveSessions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetStatusDevices200Response) GetActiveSessionsOk() (*int32, bool) {
	if o == nil || o.ActiveSessions == nil {
		return nil, false
	}
	return o.ActiveSessions, true
}

// HasActiveSessions returns a boolean if a field has been set.
func (o *GetStatusDevices200Response) HasActiveSessions() bool {
	if o != nil && o.ActiveSessions != nil {
		return true
	}

	return false
}

// SetActiveSessions gets a reference to the given int32 and assigns it to the ActiveSessions field.
func (o *GetStatusDevices200Response) SetActiveSessions(v int32) {
	o.ActiveSessions = &v
}

func (o GetStatusDevices200Response) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.RegisteredDevices != nil {
		toSerialize["registered_devices"] = o.RegisteredDevices
	}
	if o.OnlineDevices != nil {
		toSerialize["online_devices"] = o.OnlineDevices
	}
	if o.PendingDevices != nil {
		toSerialize["pending_devices"] = o.PendingDevices
	}
	if o.RejectedDevices != nil {
		toSerialize["rejected_devices"] = o.RejectedDevices
	}
	if o.ActiveSessions != nil {
		toSerialize["active_sessions"] = o.ActiveSessions
	}
	return json.Marshal(toSerialize)
}

type NullableGetStatusDevices200Response struct {
	value *GetStatusDevices200Response
	isSet bool
}

func (v NullableGetStatusDevices200Response) Get() *GetStatusDevices200Response {
	return v.value
}

func (v *NullableGetStatusDevices200Response) Set(val *GetStatusDevices200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetStatusDevices200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetStatusDevices200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetStatusDevices200Response(val *GetStatusDevices200Response) *NullableGetStatusDevices200Response {
	return &NullableGetStatusDevices200Response{value: val, isSet: true}
}

func (v NullableGetStatusDevices200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetStatusDevices200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


