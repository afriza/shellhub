/*
ShellHub Community

ShellHub Community documentation.  It documents all routes provided by ShellHub Community.   NOTICE: THE API IS NOT STABLE YET; ERROR AND INCONSISTENCIES MAY OCCUR. 

API version: 0.1.0
Contact: contato@ossystems.com.br
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// AddNamespaceMemberRequest struct for AddNamespaceMemberRequest
type AddNamespaceMemberRequest struct {
	// Member's username.
	Username string `json:"username"`
	Role NamespaceMemberRole `json:"role"`
}

// NewAddNamespaceMemberRequest instantiates a new AddNamespaceMemberRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddNamespaceMemberRequest(username string, role NamespaceMemberRole) *AddNamespaceMemberRequest {
	this := AddNamespaceMemberRequest{}
	this.Username = username
	this.Role = role
	return &this
}

// NewAddNamespaceMemberRequestWithDefaults instantiates a new AddNamespaceMemberRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddNamespaceMemberRequestWithDefaults() *AddNamespaceMemberRequest {
	this := AddNamespaceMemberRequest{}
	return &this
}

// GetUsername returns the Username field value
func (o *AddNamespaceMemberRequest) GetUsername() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Username
}

// GetUsernameOk returns a tuple with the Username field value
// and a boolean to check if the value has been set.
func (o *AddNamespaceMemberRequest) GetUsernameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Username, true
}

// SetUsername sets field value
func (o *AddNamespaceMemberRequest) SetUsername(v string) {
	o.Username = v
}

// GetRole returns the Role field value
func (o *AddNamespaceMemberRequest) GetRole() NamespaceMemberRole {
	if o == nil {
		var ret NamespaceMemberRole
		return ret
	}

	return o.Role
}

// GetRoleOk returns a tuple with the Role field value
// and a boolean to check if the value has been set.
func (o *AddNamespaceMemberRequest) GetRoleOk() (*NamespaceMemberRole, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Role, true
}

// SetRole sets field value
func (o *AddNamespaceMemberRequest) SetRole(v NamespaceMemberRole) {
	o.Role = v
}

func (o AddNamespaceMemberRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["username"] = o.Username
	}
	if true {
		toSerialize["role"] = o.Role
	}
	return json.Marshal(toSerialize)
}

type NullableAddNamespaceMemberRequest struct {
	value *AddNamespaceMemberRequest
	isSet bool
}

func (v NullableAddNamespaceMemberRequest) Get() *AddNamespaceMemberRequest {
	return v.value
}

func (v *NullableAddNamespaceMemberRequest) Set(val *AddNamespaceMemberRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAddNamespaceMemberRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAddNamespaceMemberRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddNamespaceMemberRequest(val *AddNamespaceMemberRequest) *NullableAddNamespaceMemberRequest {
	return &NullableAddNamespaceMemberRequest{value: val, isSet: true}
}

func (v NullableAddNamespaceMemberRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddNamespaceMemberRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


