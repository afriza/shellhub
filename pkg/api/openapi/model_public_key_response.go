/*
ShellHub Community

ShellHub Community documentation.  It documents all routes provided by ShellHub Community.   NOTICE: THE API IS NOT STABLE YET; ERROR AND INCONSISTENCIES MAY OCCUR. 

API version: 0.1.0
Contact: contato@ossystems.com.br
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// PublicKeyResponse struct for PublicKeyResponse
type PublicKeyResponse struct {
	// Public key's data.  The `data` field receives the public key enconded as `base64` string. 
	Data *string `json:"data,omitempty"`
	// Public key's fingerprint.
	Fingerprint *string `json:"fingerprint,omitempty"`
	// Public key's creation date.
	CreatedAt *time.Time `json:"created_at,omitempty"`
	// Namespace's tenant ID
	TenantId *string `json:"tenant_id,omitempty"`
	// Public key's name.
	Name *string `json:"name,omitempty"`
	Filter *PublicKeyFilter `json:"filter,omitempty"`
	// Public key's regex username.   The `username` field define which user, in the device, may be access through this public key. 
	Username *string `json:"username,omitempty"`
}

// NewPublicKeyResponse instantiates a new PublicKeyResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPublicKeyResponse() *PublicKeyResponse {
	this := PublicKeyResponse{}
	return &this
}

// NewPublicKeyResponseWithDefaults instantiates a new PublicKeyResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPublicKeyResponseWithDefaults() *PublicKeyResponse {
	this := PublicKeyResponse{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *PublicKeyResponse) GetData() string {
	if o == nil || o.Data == nil {
		var ret string
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicKeyResponse) GetDataOk() (*string, bool) {
	if o == nil || o.Data == nil {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *PublicKeyResponse) HasData() bool {
	if o != nil && o.Data != nil {
		return true
	}

	return false
}

// SetData gets a reference to the given string and assigns it to the Data field.
func (o *PublicKeyResponse) SetData(v string) {
	o.Data = &v
}

// GetFingerprint returns the Fingerprint field value if set, zero value otherwise.
func (o *PublicKeyResponse) GetFingerprint() string {
	if o == nil || o.Fingerprint == nil {
		var ret string
		return ret
	}
	return *o.Fingerprint
}

// GetFingerprintOk returns a tuple with the Fingerprint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicKeyResponse) GetFingerprintOk() (*string, bool) {
	if o == nil || o.Fingerprint == nil {
		return nil, false
	}
	return o.Fingerprint, true
}

// HasFingerprint returns a boolean if a field has been set.
func (o *PublicKeyResponse) HasFingerprint() bool {
	if o != nil && o.Fingerprint != nil {
		return true
	}

	return false
}

// SetFingerprint gets a reference to the given string and assigns it to the Fingerprint field.
func (o *PublicKeyResponse) SetFingerprint(v string) {
	o.Fingerprint = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *PublicKeyResponse) GetCreatedAt() time.Time {
	if o == nil || o.CreatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicKeyResponse) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *PublicKeyResponse) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *PublicKeyResponse) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetTenantId returns the TenantId field value if set, zero value otherwise.
func (o *PublicKeyResponse) GetTenantId() string {
	if o == nil || o.TenantId == nil {
		var ret string
		return ret
	}
	return *o.TenantId
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicKeyResponse) GetTenantIdOk() (*string, bool) {
	if o == nil || o.TenantId == nil {
		return nil, false
	}
	return o.TenantId, true
}

// HasTenantId returns a boolean if a field has been set.
func (o *PublicKeyResponse) HasTenantId() bool {
	if o != nil && o.TenantId != nil {
		return true
	}

	return false
}

// SetTenantId gets a reference to the given string and assigns it to the TenantId field.
func (o *PublicKeyResponse) SetTenantId(v string) {
	o.TenantId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PublicKeyResponse) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicKeyResponse) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PublicKeyResponse) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PublicKeyResponse) SetName(v string) {
	o.Name = &v
}

// GetFilter returns the Filter field value if set, zero value otherwise.
func (o *PublicKeyResponse) GetFilter() PublicKeyFilter {
	if o == nil || o.Filter == nil {
		var ret PublicKeyFilter
		return ret
	}
	return *o.Filter
}

// GetFilterOk returns a tuple with the Filter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicKeyResponse) GetFilterOk() (*PublicKeyFilter, bool) {
	if o == nil || o.Filter == nil {
		return nil, false
	}
	return o.Filter, true
}

// HasFilter returns a boolean if a field has been set.
func (o *PublicKeyResponse) HasFilter() bool {
	if o != nil && o.Filter != nil {
		return true
	}

	return false
}

// SetFilter gets a reference to the given PublicKeyFilter and assigns it to the Filter field.
func (o *PublicKeyResponse) SetFilter(v PublicKeyFilter) {
	o.Filter = &v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *PublicKeyResponse) GetUsername() string {
	if o == nil || o.Username == nil {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicKeyResponse) GetUsernameOk() (*string, bool) {
	if o == nil || o.Username == nil {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *PublicKeyResponse) HasUsername() bool {
	if o != nil && o.Username != nil {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *PublicKeyResponse) SetUsername(v string) {
	o.Username = &v
}

func (o PublicKeyResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Data != nil {
		toSerialize["data"] = o.Data
	}
	if o.Fingerprint != nil {
		toSerialize["fingerprint"] = o.Fingerprint
	}
	if o.CreatedAt != nil {
		toSerialize["created_at"] = o.CreatedAt
	}
	if o.TenantId != nil {
		toSerialize["tenant_id"] = o.TenantId
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Filter != nil {
		toSerialize["filter"] = o.Filter
	}
	if o.Username != nil {
		toSerialize["username"] = o.Username
	}
	return json.Marshal(toSerialize)
}

type NullablePublicKeyResponse struct {
	value *PublicKeyResponse
	isSet bool
}

func (v NullablePublicKeyResponse) Get() *PublicKeyResponse {
	return v.value
}

func (v *NullablePublicKeyResponse) Set(val *PublicKeyResponse) {
	v.value = val
	v.isSet = true
}

func (v NullablePublicKeyResponse) IsSet() bool {
	return v.isSet
}

func (v *NullablePublicKeyResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePublicKeyResponse(val *PublicKeyResponse) *NullablePublicKeyResponse {
	return &NullablePublicKeyResponse{value: val, isSet: true}
}

func (v NullablePublicKeyResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePublicKeyResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


