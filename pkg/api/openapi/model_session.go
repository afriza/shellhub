/*
ShellHub Community

ShellHub Community documentation.  It documents all routes provided by ShellHub Community.   NOTICE: THE API IS NOT STABLE YET; ERROR AND INCONSISTENCIES MAY OCCUR. 

API version: 0.1.0
Contact: contato@ossystems.com.br
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// Session struct for Session
type Session struct {
	// Session's UID
	Uid *string `json:"uid,omitempty"`
	// Device's UID
	DeviceUid *string `json:"device_uid,omitempty"`
	Device *Device `json:"device,omitempty"`
	// Namespace's tenant ID
	TenantId *string `json:"tenant_id,omitempty"`
	// Session's username
	Username *string `json:"username,omitempty"`
	// Session's IP address
	IpAddress *string `json:"ip_address,omitempty"`
	// Session's started date
	StartedAt *string `json:"started_at,omitempty"`
	// Session's last seen date
	LastSeen *string `json:"last_seen,omitempty"`
	// Session's active status
	Active *bool `json:"active,omitempty"`
	// Session's authenticated status
	Authenticated *bool `json:"authenticated,omitempty"`
	// Session's recorded status
	Recorded *bool `json:"recorded,omitempty"`
	// Session's type
	Type *string `json:"type,omitempty"`
	// Session's terminal
	Term *string `json:"term,omitempty"`
}

// NewSession instantiates a new Session object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSession() *Session {
	this := Session{}
	return &this
}

// NewSessionWithDefaults instantiates a new Session object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSessionWithDefaults() *Session {
	this := Session{}
	return &this
}

// GetUid returns the Uid field value if set, zero value otherwise.
func (o *Session) GetUid() string {
	if o == nil || o.Uid == nil {
		var ret string
		return ret
	}
	return *o.Uid
}

// GetUidOk returns a tuple with the Uid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Session) GetUidOk() (*string, bool) {
	if o == nil || o.Uid == nil {
		return nil, false
	}
	return o.Uid, true
}

// HasUid returns a boolean if a field has been set.
func (o *Session) HasUid() bool {
	if o != nil && o.Uid != nil {
		return true
	}

	return false
}

// SetUid gets a reference to the given string and assigns it to the Uid field.
func (o *Session) SetUid(v string) {
	o.Uid = &v
}

// GetDeviceUid returns the DeviceUid field value if set, zero value otherwise.
func (o *Session) GetDeviceUid() string {
	if o == nil || o.DeviceUid == nil {
		var ret string
		return ret
	}
	return *o.DeviceUid
}

// GetDeviceUidOk returns a tuple with the DeviceUid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Session) GetDeviceUidOk() (*string, bool) {
	if o == nil || o.DeviceUid == nil {
		return nil, false
	}
	return o.DeviceUid, true
}

// HasDeviceUid returns a boolean if a field has been set.
func (o *Session) HasDeviceUid() bool {
	if o != nil && o.DeviceUid != nil {
		return true
	}

	return false
}

// SetDeviceUid gets a reference to the given string and assigns it to the DeviceUid field.
func (o *Session) SetDeviceUid(v string) {
	o.DeviceUid = &v
}

// GetDevice returns the Device field value if set, zero value otherwise.
func (o *Session) GetDevice() Device {
	if o == nil || o.Device == nil {
		var ret Device
		return ret
	}
	return *o.Device
}

// GetDeviceOk returns a tuple with the Device field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Session) GetDeviceOk() (*Device, bool) {
	if o == nil || o.Device == nil {
		return nil, false
	}
	return o.Device, true
}

// HasDevice returns a boolean if a field has been set.
func (o *Session) HasDevice() bool {
	if o != nil && o.Device != nil {
		return true
	}

	return false
}

// SetDevice gets a reference to the given Device and assigns it to the Device field.
func (o *Session) SetDevice(v Device) {
	o.Device = &v
}

// GetTenantId returns the TenantId field value if set, zero value otherwise.
func (o *Session) GetTenantId() string {
	if o == nil || o.TenantId == nil {
		var ret string
		return ret
	}
	return *o.TenantId
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Session) GetTenantIdOk() (*string, bool) {
	if o == nil || o.TenantId == nil {
		return nil, false
	}
	return o.TenantId, true
}

// HasTenantId returns a boolean if a field has been set.
func (o *Session) HasTenantId() bool {
	if o != nil && o.TenantId != nil {
		return true
	}

	return false
}

// SetTenantId gets a reference to the given string and assigns it to the TenantId field.
func (o *Session) SetTenantId(v string) {
	o.TenantId = &v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *Session) GetUsername() string {
	if o == nil || o.Username == nil {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Session) GetUsernameOk() (*string, bool) {
	if o == nil || o.Username == nil {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *Session) HasUsername() bool {
	if o != nil && o.Username != nil {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *Session) SetUsername(v string) {
	o.Username = &v
}

// GetIpAddress returns the IpAddress field value if set, zero value otherwise.
func (o *Session) GetIpAddress() string {
	if o == nil || o.IpAddress == nil {
		var ret string
		return ret
	}
	return *o.IpAddress
}

// GetIpAddressOk returns a tuple with the IpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Session) GetIpAddressOk() (*string, bool) {
	if o == nil || o.IpAddress == nil {
		return nil, false
	}
	return o.IpAddress, true
}

// HasIpAddress returns a boolean if a field has been set.
func (o *Session) HasIpAddress() bool {
	if o != nil && o.IpAddress != nil {
		return true
	}

	return false
}

// SetIpAddress gets a reference to the given string and assigns it to the IpAddress field.
func (o *Session) SetIpAddress(v string) {
	o.IpAddress = &v
}

// GetStartedAt returns the StartedAt field value if set, zero value otherwise.
func (o *Session) GetStartedAt() string {
	if o == nil || o.StartedAt == nil {
		var ret string
		return ret
	}
	return *o.StartedAt
}

// GetStartedAtOk returns a tuple with the StartedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Session) GetStartedAtOk() (*string, bool) {
	if o == nil || o.StartedAt == nil {
		return nil, false
	}
	return o.StartedAt, true
}

// HasStartedAt returns a boolean if a field has been set.
func (o *Session) HasStartedAt() bool {
	if o != nil && o.StartedAt != nil {
		return true
	}

	return false
}

// SetStartedAt gets a reference to the given string and assigns it to the StartedAt field.
func (o *Session) SetStartedAt(v string) {
	o.StartedAt = &v
}

// GetLastSeen returns the LastSeen field value if set, zero value otherwise.
func (o *Session) GetLastSeen() string {
	if o == nil || o.LastSeen == nil {
		var ret string
		return ret
	}
	return *o.LastSeen
}

// GetLastSeenOk returns a tuple with the LastSeen field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Session) GetLastSeenOk() (*string, bool) {
	if o == nil || o.LastSeen == nil {
		return nil, false
	}
	return o.LastSeen, true
}

// HasLastSeen returns a boolean if a field has been set.
func (o *Session) HasLastSeen() bool {
	if o != nil && o.LastSeen != nil {
		return true
	}

	return false
}

// SetLastSeen gets a reference to the given string and assigns it to the LastSeen field.
func (o *Session) SetLastSeen(v string) {
	o.LastSeen = &v
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *Session) GetActive() bool {
	if o == nil || o.Active == nil {
		var ret bool
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Session) GetActiveOk() (*bool, bool) {
	if o == nil || o.Active == nil {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *Session) HasActive() bool {
	if o != nil && o.Active != nil {
		return true
	}

	return false
}

// SetActive gets a reference to the given bool and assigns it to the Active field.
func (o *Session) SetActive(v bool) {
	o.Active = &v
}

// GetAuthenticated returns the Authenticated field value if set, zero value otherwise.
func (o *Session) GetAuthenticated() bool {
	if o == nil || o.Authenticated == nil {
		var ret bool
		return ret
	}
	return *o.Authenticated
}

// GetAuthenticatedOk returns a tuple with the Authenticated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Session) GetAuthenticatedOk() (*bool, bool) {
	if o == nil || o.Authenticated == nil {
		return nil, false
	}
	return o.Authenticated, true
}

// HasAuthenticated returns a boolean if a field has been set.
func (o *Session) HasAuthenticated() bool {
	if o != nil && o.Authenticated != nil {
		return true
	}

	return false
}

// SetAuthenticated gets a reference to the given bool and assigns it to the Authenticated field.
func (o *Session) SetAuthenticated(v bool) {
	o.Authenticated = &v
}

// GetRecorded returns the Recorded field value if set, zero value otherwise.
func (o *Session) GetRecorded() bool {
	if o == nil || o.Recorded == nil {
		var ret bool
		return ret
	}
	return *o.Recorded
}

// GetRecordedOk returns a tuple with the Recorded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Session) GetRecordedOk() (*bool, bool) {
	if o == nil || o.Recorded == nil {
		return nil, false
	}
	return o.Recorded, true
}

// HasRecorded returns a boolean if a field has been set.
func (o *Session) HasRecorded() bool {
	if o != nil && o.Recorded != nil {
		return true
	}

	return false
}

// SetRecorded gets a reference to the given bool and assigns it to the Recorded field.
func (o *Session) SetRecorded(v bool) {
	o.Recorded = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *Session) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Session) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *Session) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *Session) SetType(v string) {
	o.Type = &v
}

// GetTerm returns the Term field value if set, zero value otherwise.
func (o *Session) GetTerm() string {
	if o == nil || o.Term == nil {
		var ret string
		return ret
	}
	return *o.Term
}

// GetTermOk returns a tuple with the Term field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Session) GetTermOk() (*string, bool) {
	if o == nil || o.Term == nil {
		return nil, false
	}
	return o.Term, true
}

// HasTerm returns a boolean if a field has been set.
func (o *Session) HasTerm() bool {
	if o != nil && o.Term != nil {
		return true
	}

	return false
}

// SetTerm gets a reference to the given string and assigns it to the Term field.
func (o *Session) SetTerm(v string) {
	o.Term = &v
}

func (o Session) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Uid != nil {
		toSerialize["uid"] = o.Uid
	}
	if o.DeviceUid != nil {
		toSerialize["device_uid"] = o.DeviceUid
	}
	if o.Device != nil {
		toSerialize["device"] = o.Device
	}
	if o.TenantId != nil {
		toSerialize["tenant_id"] = o.TenantId
	}
	if o.Username != nil {
		toSerialize["username"] = o.Username
	}
	if o.IpAddress != nil {
		toSerialize["ip_address"] = o.IpAddress
	}
	if o.StartedAt != nil {
		toSerialize["started_at"] = o.StartedAt
	}
	if o.LastSeen != nil {
		toSerialize["last_seen"] = o.LastSeen
	}
	if o.Active != nil {
		toSerialize["active"] = o.Active
	}
	if o.Authenticated != nil {
		toSerialize["authenticated"] = o.Authenticated
	}
	if o.Recorded != nil {
		toSerialize["recorded"] = o.Recorded
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.Term != nil {
		toSerialize["term"] = o.Term
	}
	return json.Marshal(toSerialize)
}

type NullableSession struct {
	value *Session
	isSet bool
}

func (v NullableSession) Get() *Session {
	return v.value
}

func (v *NullableSession) Set(val *Session) {
	v.value = val
	v.isSet = true
}

func (v NullableSession) IsSet() bool {
	return v.isSet
}

func (v *NullableSession) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSession(val *Session) *NullableSession {
	return &NullableSession{value: val, isSet: true}
}

func (v NullableSession) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSession) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


