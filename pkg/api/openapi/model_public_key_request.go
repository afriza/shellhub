/*
ShellHub Community

ShellHub Community documentation.  It documents all routes provided by ShellHub Community.   NOTICE: THE API IS NOT STABLE YET; ERROR AND INCONSISTENCIES MAY OCCUR. 

API version: 0.1.0
Contact: contato@ossystems.com.br
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// PublicKeyRequest struct for PublicKeyRequest
type PublicKeyRequest struct {
	// Public key's data.  The `data` field receives the public key enconded as `base64` string. 
	Data string `json:"data"`
	Filter PublicKeyFilter `json:"filter"`
	// Public key's name.
	Name string `json:"name"`
	// Public key's regex username.   The `username` field define which user, in the device, may be access through this public key. 
	Username string `json:"username"`
}

// NewPublicKeyRequest instantiates a new PublicKeyRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPublicKeyRequest(data string, filter PublicKeyFilter, name string, username string) *PublicKeyRequest {
	this := PublicKeyRequest{}
	this.Data = data
	this.Filter = filter
	this.Name = name
	this.Username = username
	return &this
}

// NewPublicKeyRequestWithDefaults instantiates a new PublicKeyRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPublicKeyRequestWithDefaults() *PublicKeyRequest {
	this := PublicKeyRequest{}
	return &this
}

// GetData returns the Data field value
func (o *PublicKeyRequest) GetData() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *PublicKeyRequest) GetDataOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Data, true
}

// SetData sets field value
func (o *PublicKeyRequest) SetData(v string) {
	o.Data = v
}

// GetFilter returns the Filter field value
func (o *PublicKeyRequest) GetFilter() PublicKeyFilter {
	if o == nil {
		var ret PublicKeyFilter
		return ret
	}

	return o.Filter
}

// GetFilterOk returns a tuple with the Filter field value
// and a boolean to check if the value has been set.
func (o *PublicKeyRequest) GetFilterOk() (*PublicKeyFilter, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Filter, true
}

// SetFilter sets field value
func (o *PublicKeyRequest) SetFilter(v PublicKeyFilter) {
	o.Filter = v
}

// GetName returns the Name field value
func (o *PublicKeyRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *PublicKeyRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *PublicKeyRequest) SetName(v string) {
	o.Name = v
}

// GetUsername returns the Username field value
func (o *PublicKeyRequest) GetUsername() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Username
}

// GetUsernameOk returns a tuple with the Username field value
// and a boolean to check if the value has been set.
func (o *PublicKeyRequest) GetUsernameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Username, true
}

// SetUsername sets field value
func (o *PublicKeyRequest) SetUsername(v string) {
	o.Username = v
}

func (o PublicKeyRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["data"] = o.Data
	}
	if true {
		toSerialize["filter"] = o.Filter
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["username"] = o.Username
	}
	return json.Marshal(toSerialize)
}

type NullablePublicKeyRequest struct {
	value *PublicKeyRequest
	isSet bool
}

func (v NullablePublicKeyRequest) Get() *PublicKeyRequest {
	return v.value
}

func (v *NullablePublicKeyRequest) Set(val *PublicKeyRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePublicKeyRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePublicKeyRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePublicKeyRequest(val *PublicKeyRequest) *NullablePublicKeyRequest {
	return &NullablePublicKeyRequest{value: val, isSet: true}
}

func (v NullablePublicKeyRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePublicKeyRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


