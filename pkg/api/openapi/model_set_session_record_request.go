/*
ShellHub Community

ShellHub Community documentation.  It documents all routes provided by ShellHub Community.   NOTICE: THE API IS NOT STABLE YET; ERROR AND INCONSISTENCIES MAY OCCUR. 

API version: 0.1.0
Contact: contato@ossystems.com.br
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// SetSessionRecordRequest struct for SetSessionRecordRequest
type SetSessionRecordRequest struct {
	// Session's record status.
	SessionRecord *bool `json:"session_record,omitempty"`
}

// NewSetSessionRecordRequest instantiates a new SetSessionRecordRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSetSessionRecordRequest() *SetSessionRecordRequest {
	this := SetSessionRecordRequest{}
	var sessionRecord bool = false
	this.SessionRecord = &sessionRecord
	return &this
}

// NewSetSessionRecordRequestWithDefaults instantiates a new SetSessionRecordRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSetSessionRecordRequestWithDefaults() *SetSessionRecordRequest {
	this := SetSessionRecordRequest{}
	var sessionRecord bool = false
	this.SessionRecord = &sessionRecord
	return &this
}

// GetSessionRecord returns the SessionRecord field value if set, zero value otherwise.
func (o *SetSessionRecordRequest) GetSessionRecord() bool {
	if o == nil || o.SessionRecord == nil {
		var ret bool
		return ret
	}
	return *o.SessionRecord
}

// GetSessionRecordOk returns a tuple with the SessionRecord field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SetSessionRecordRequest) GetSessionRecordOk() (*bool, bool) {
	if o == nil || o.SessionRecord == nil {
		return nil, false
	}
	return o.SessionRecord, true
}

// HasSessionRecord returns a boolean if a field has been set.
func (o *SetSessionRecordRequest) HasSessionRecord() bool {
	if o != nil && o.SessionRecord != nil {
		return true
	}

	return false
}

// SetSessionRecord gets a reference to the given bool and assigns it to the SessionRecord field.
func (o *SetSessionRecordRequest) SetSessionRecord(v bool) {
	o.SessionRecord = &v
}

func (o SetSessionRecordRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.SessionRecord != nil {
		toSerialize["session_record"] = o.SessionRecord
	}
	return json.Marshal(toSerialize)
}

type NullableSetSessionRecordRequest struct {
	value *SetSessionRecordRequest
	isSet bool
}

func (v NullableSetSessionRecordRequest) Get() *SetSessionRecordRequest {
	return v.value
}

func (v *NullableSetSessionRecordRequest) Set(val *SetSessionRecordRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSetSessionRecordRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSetSessionRecordRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSetSessionRecordRequest(val *SetSessionRecordRequest) *NullableSetSessionRecordRequest {
	return &NullableSetSessionRecordRequest{value: val, isSet: true}
}

func (v NullableSetSessionRecordRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSetSessionRecordRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


