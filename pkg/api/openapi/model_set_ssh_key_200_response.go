/*
ShellHub Community

ShellHub Community documentation.  It documents all routes provided by ShellHub Community.   NOTICE: THE API IS NOT STABLE YET; ERROR AND INCONSISTENCIES MAY OCCUR. 

API version: 0.1.0
Contact: contato@ossystems.com.br
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// SetSSHKey200Response struct for SetSSHKey200Response
type SetSSHKey200Response struct {
	// Device signature
	Signature *string `json:"signature,omitempty"`
}

// NewSetSSHKey200Response instantiates a new SetSSHKey200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSetSSHKey200Response() *SetSSHKey200Response {
	this := SetSSHKey200Response{}
	return &this
}

// NewSetSSHKey200ResponseWithDefaults instantiates a new SetSSHKey200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSetSSHKey200ResponseWithDefaults() *SetSSHKey200Response {
	this := SetSSHKey200Response{}
	return &this
}

// GetSignature returns the Signature field value if set, zero value otherwise.
func (o *SetSSHKey200Response) GetSignature() string {
	if o == nil || o.Signature == nil {
		var ret string
		return ret
	}
	return *o.Signature
}

// GetSignatureOk returns a tuple with the Signature field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SetSSHKey200Response) GetSignatureOk() (*string, bool) {
	if o == nil || o.Signature == nil {
		return nil, false
	}
	return o.Signature, true
}

// HasSignature returns a boolean if a field has been set.
func (o *SetSSHKey200Response) HasSignature() bool {
	if o != nil && o.Signature != nil {
		return true
	}

	return false
}

// SetSignature gets a reference to the given string and assigns it to the Signature field.
func (o *SetSSHKey200Response) SetSignature(v string) {
	o.Signature = &v
}

func (o SetSSHKey200Response) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Signature != nil {
		toSerialize["signature"] = o.Signature
	}
	return json.Marshal(toSerialize)
}

type NullableSetSSHKey200Response struct {
	value *SetSSHKey200Response
	isSet bool
}

func (v NullableSetSSHKey200Response) Get() *SetSSHKey200Response {
	return v.value
}

func (v *NullableSetSSHKey200Response) Set(val *SetSSHKey200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableSetSSHKey200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableSetSSHKey200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSetSSHKey200Response(val *SetSSHKey200Response) *NullableSetSSHKey200Response {
	return &NullableSetSSHKey200Response{value: val, isSet: true}
}

func (v NullableSetSSHKey200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSetSSHKey200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


