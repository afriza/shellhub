/*
ShellHub Community

ShellHub Community documentation.  It documents all routes provided by ShellHub Community.   NOTICE: THE API IS NOT STABLE YET; ERROR AND INCONSISTENCIES MAY OCCUR. 

API version: 0.1.0
Contact: contato@ossystems.com.br
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// GetInfo500Response struct for GetInfo500Response
type GetInfo500Response struct {
	// Error message
	Message *string `json:"message,omitempty"`
}

// NewGetInfo500Response instantiates a new GetInfo500Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetInfo500Response() *GetInfo500Response {
	this := GetInfo500Response{}
	return &this
}

// NewGetInfo500ResponseWithDefaults instantiates a new GetInfo500Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetInfo500ResponseWithDefaults() *GetInfo500Response {
	this := GetInfo500Response{}
	return &this
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *GetInfo500Response) GetMessage() string {
	if o == nil || o.Message == nil {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetInfo500Response) GetMessageOk() (*string, bool) {
	if o == nil || o.Message == nil {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *GetInfo500Response) HasMessage() bool {
	if o != nil && o.Message != nil {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *GetInfo500Response) SetMessage(v string) {
	o.Message = &v
}

func (o GetInfo500Response) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Message != nil {
		toSerialize["message"] = o.Message
	}
	return json.Marshal(toSerialize)
}

type NullableGetInfo500Response struct {
	value *GetInfo500Response
	isSet bool
}

func (v NullableGetInfo500Response) Get() *GetInfo500Response {
	return v.value
}

func (v *NullableGetInfo500Response) Set(val *GetInfo500Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetInfo500Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetInfo500Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetInfo500Response(val *GetInfo500Response) *NullableGetInfo500Response {
	return &NullableGetInfo500Response{value: val, isSet: true}
}

func (v NullableGetInfo500Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetInfo500Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


