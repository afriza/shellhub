/*
ShellHub Community

ShellHub Community documentation.  It documents all routes provided by ShellHub Community.   NOTICE: THE API IS NOT STABLE YET; ERROR AND INCONSISTENCIES MAY OCCUR. 

API version: 0.1.0
Contact: contato@ossystems.com.br
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// PostAuthDeviceRequest struct for PostAuthDeviceRequest
type PostAuthDeviceRequest struct {
	Info DeviceInfo `json:"info"`
	Sessions []string `json:"sessions,omitempty"`
	Hostname string `json:"hostname"`
	Identity *DeviceIdentity `json:"identity,omitempty"`
	// Device's public key.
	PublicKey string `json:"public_key"`
	// Namespace's tenant ID
	TenantId string `json:"tenant_id"`
}

// NewPostAuthDeviceRequest instantiates a new PostAuthDeviceRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostAuthDeviceRequest(info DeviceInfo, hostname string, publicKey string, tenantId string) *PostAuthDeviceRequest {
	this := PostAuthDeviceRequest{}
	this.Info = info
	this.Hostname = hostname
	this.PublicKey = publicKey
	this.TenantId = tenantId
	return &this
}

// NewPostAuthDeviceRequestWithDefaults instantiates a new PostAuthDeviceRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostAuthDeviceRequestWithDefaults() *PostAuthDeviceRequest {
	this := PostAuthDeviceRequest{}
	return &this
}

// GetInfo returns the Info field value
func (o *PostAuthDeviceRequest) GetInfo() DeviceInfo {
	if o == nil {
		var ret DeviceInfo
		return ret
	}

	return o.Info
}

// GetInfoOk returns a tuple with the Info field value
// and a boolean to check if the value has been set.
func (o *PostAuthDeviceRequest) GetInfoOk() (*DeviceInfo, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Info, true
}

// SetInfo sets field value
func (o *PostAuthDeviceRequest) SetInfo(v DeviceInfo) {
	o.Info = v
}

// GetSessions returns the Sessions field value if set, zero value otherwise.
func (o *PostAuthDeviceRequest) GetSessions() []string {
	if o == nil || o.Sessions == nil {
		var ret []string
		return ret
	}
	return o.Sessions
}

// GetSessionsOk returns a tuple with the Sessions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostAuthDeviceRequest) GetSessionsOk() ([]string, bool) {
	if o == nil || o.Sessions == nil {
		return nil, false
	}
	return o.Sessions, true
}

// HasSessions returns a boolean if a field has been set.
func (o *PostAuthDeviceRequest) HasSessions() bool {
	if o != nil && o.Sessions != nil {
		return true
	}

	return false
}

// SetSessions gets a reference to the given []string and assigns it to the Sessions field.
func (o *PostAuthDeviceRequest) SetSessions(v []string) {
	o.Sessions = v
}

// GetHostname returns the Hostname field value
func (o *PostAuthDeviceRequest) GetHostname() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Hostname
}

// GetHostnameOk returns a tuple with the Hostname field value
// and a boolean to check if the value has been set.
func (o *PostAuthDeviceRequest) GetHostnameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Hostname, true
}

// SetHostname sets field value
func (o *PostAuthDeviceRequest) SetHostname(v string) {
	o.Hostname = v
}

// GetIdentity returns the Identity field value if set, zero value otherwise.
func (o *PostAuthDeviceRequest) GetIdentity() DeviceIdentity {
	if o == nil || o.Identity == nil {
		var ret DeviceIdentity
		return ret
	}
	return *o.Identity
}

// GetIdentityOk returns a tuple with the Identity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostAuthDeviceRequest) GetIdentityOk() (*DeviceIdentity, bool) {
	if o == nil || o.Identity == nil {
		return nil, false
	}
	return o.Identity, true
}

// HasIdentity returns a boolean if a field has been set.
func (o *PostAuthDeviceRequest) HasIdentity() bool {
	if o != nil && o.Identity != nil {
		return true
	}

	return false
}

// SetIdentity gets a reference to the given DeviceIdentity and assigns it to the Identity field.
func (o *PostAuthDeviceRequest) SetIdentity(v DeviceIdentity) {
	o.Identity = &v
}

// GetPublicKey returns the PublicKey field value
func (o *PostAuthDeviceRequest) GetPublicKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PublicKey
}

// GetPublicKeyOk returns a tuple with the PublicKey field value
// and a boolean to check if the value has been set.
func (o *PostAuthDeviceRequest) GetPublicKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PublicKey, true
}

// SetPublicKey sets field value
func (o *PostAuthDeviceRequest) SetPublicKey(v string) {
	o.PublicKey = v
}

// GetTenantId returns the TenantId field value
func (o *PostAuthDeviceRequest) GetTenantId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TenantId
}

// GetTenantIdOk returns a tuple with the TenantId field value
// and a boolean to check if the value has been set.
func (o *PostAuthDeviceRequest) GetTenantIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TenantId, true
}

// SetTenantId sets field value
func (o *PostAuthDeviceRequest) SetTenantId(v string) {
	o.TenantId = v
}

func (o PostAuthDeviceRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["info"] = o.Info
	}
	if o.Sessions != nil {
		toSerialize["sessions"] = o.Sessions
	}
	if true {
		toSerialize["hostname"] = o.Hostname
	}
	if o.Identity != nil {
		toSerialize["identity"] = o.Identity
	}
	if true {
		toSerialize["public_key"] = o.PublicKey
	}
	if true {
		toSerialize["tenant_id"] = o.TenantId
	}
	return json.Marshal(toSerialize)
}

type NullablePostAuthDeviceRequest struct {
	value *PostAuthDeviceRequest
	isSet bool
}

func (v NullablePostAuthDeviceRequest) Get() *PostAuthDeviceRequest {
	return v.value
}

func (v *NullablePostAuthDeviceRequest) Set(val *PostAuthDeviceRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePostAuthDeviceRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePostAuthDeviceRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostAuthDeviceRequest(val *PostAuthDeviceRequest) *NullablePostAuthDeviceRequest {
	return &NullablePostAuthDeviceRequest{value: val, isSet: true}
}

func (v NullablePostAuthDeviceRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostAuthDeviceRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


