/*
ShellHub Community

ShellHub Community documentation.  It documents all routes provided by ShellHub Community.   NOTICE: THE API IS NOT STABLE YET; ERROR AND INCONSISTENCIES MAY OCCUR. 

API version: 0.1.0
Contact: contato@ossystems.com.br
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// UpdatePublicKeyRequest struct for UpdatePublicKeyRequest
type UpdatePublicKeyRequest struct {
	// Public key's name.
	Name string `json:"name"`
	// Public key's username.
	Username string `json:"username"`
	Filter PublicKeyFilter `json:"filter"`
}

// NewUpdatePublicKeyRequest instantiates a new UpdatePublicKeyRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdatePublicKeyRequest(name string, username string, filter PublicKeyFilter) *UpdatePublicKeyRequest {
	this := UpdatePublicKeyRequest{}
	this.Name = name
	this.Username = username
	this.Filter = filter
	return &this
}

// NewUpdatePublicKeyRequestWithDefaults instantiates a new UpdatePublicKeyRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdatePublicKeyRequestWithDefaults() *UpdatePublicKeyRequest {
	this := UpdatePublicKeyRequest{}
	return &this
}

// GetName returns the Name field value
func (o *UpdatePublicKeyRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *UpdatePublicKeyRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *UpdatePublicKeyRequest) SetName(v string) {
	o.Name = v
}

// GetUsername returns the Username field value
func (o *UpdatePublicKeyRequest) GetUsername() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Username
}

// GetUsernameOk returns a tuple with the Username field value
// and a boolean to check if the value has been set.
func (o *UpdatePublicKeyRequest) GetUsernameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Username, true
}

// SetUsername sets field value
func (o *UpdatePublicKeyRequest) SetUsername(v string) {
	o.Username = v
}

// GetFilter returns the Filter field value
func (o *UpdatePublicKeyRequest) GetFilter() PublicKeyFilter {
	if o == nil {
		var ret PublicKeyFilter
		return ret
	}

	return o.Filter
}

// GetFilterOk returns a tuple with the Filter field value
// and a boolean to check if the value has been set.
func (o *UpdatePublicKeyRequest) GetFilterOk() (*PublicKeyFilter, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Filter, true
}

// SetFilter sets field value
func (o *UpdatePublicKeyRequest) SetFilter(v PublicKeyFilter) {
	o.Filter = v
}

func (o UpdatePublicKeyRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["username"] = o.Username
	}
	if true {
		toSerialize["filter"] = o.Filter
	}
	return json.Marshal(toSerialize)
}

type NullableUpdatePublicKeyRequest struct {
	value *UpdatePublicKeyRequest
	isSet bool
}

func (v NullableUpdatePublicKeyRequest) Get() *UpdatePublicKeyRequest {
	return v.value
}

func (v *NullableUpdatePublicKeyRequest) Set(val *UpdatePublicKeyRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdatePublicKeyRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdatePublicKeyRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdatePublicKeyRequest(val *UpdatePublicKeyRequest) *NullableUpdatePublicKeyRequest {
	return &NullableUpdatePublicKeyRequest{value: val, isSet: true}
}

func (v NullableUpdatePublicKeyRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdatePublicKeyRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


