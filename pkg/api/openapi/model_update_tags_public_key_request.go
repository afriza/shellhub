/*
ShellHub Community

ShellHub Community documentation.  It documents all routes provided by ShellHub Community.   NOTICE: THE API IS NOT STABLE YET; ERROR AND INCONSISTENCIES MAY OCCUR. 

API version: 0.1.0
Contact: contato@ossystems.com.br
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// UpdateTagsPublicKeyRequest struct for UpdateTagsPublicKeyRequest
type UpdateTagsPublicKeyRequest struct {
	// Public key's new tags.
	Tags []string `json:"tags,omitempty"`
}

// NewUpdateTagsPublicKeyRequest instantiates a new UpdateTagsPublicKeyRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateTagsPublicKeyRequest() *UpdateTagsPublicKeyRequest {
	this := UpdateTagsPublicKeyRequest{}
	return &this
}

// NewUpdateTagsPublicKeyRequestWithDefaults instantiates a new UpdateTagsPublicKeyRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateTagsPublicKeyRequestWithDefaults() *UpdateTagsPublicKeyRequest {
	this := UpdateTagsPublicKeyRequest{}
	return &this
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *UpdateTagsPublicKeyRequest) GetTags() []string {
	if o == nil || o.Tags == nil {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateTagsPublicKeyRequest) GetTagsOk() ([]string, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *UpdateTagsPublicKeyRequest) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *UpdateTagsPublicKeyRequest) SetTags(v []string) {
	o.Tags = v
}

func (o UpdateTagsPublicKeyRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateTagsPublicKeyRequest struct {
	value *UpdateTagsPublicKeyRequest
	isSet bool
}

func (v NullableUpdateTagsPublicKeyRequest) Get() *UpdateTagsPublicKeyRequest {
	return v.value
}

func (v *NullableUpdateTagsPublicKeyRequest) Set(val *UpdateTagsPublicKeyRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateTagsPublicKeyRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateTagsPublicKeyRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateTagsPublicKeyRequest(val *UpdateTagsPublicKeyRequest) *NullableUpdateTagsPublicKeyRequest {
	return &NullableUpdateTagsPublicKeyRequest{value: val, isSet: true}
}

func (v NullableUpdateTagsPublicKeyRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateTagsPublicKeyRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


