/*
ShellHub Community

ShellHub Community documentation.  It documents all routes provided by ShellHub Community.   NOTICE: THE API IS NOT STABLE YET; ERROR AND INCONSISTENCIES MAY OCCUR. 

API version: 0.1.0
Contact: contato@ossystems.com.br
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// Login struct for Login
type Login struct {
	// Username
	Username string `json:"username"`
	// Password
	Password string `json:"password"`
}

// NewLogin instantiates a new Login object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLogin(username string, password string) *Login {
	this := Login{}
	this.Username = username
	this.Password = password
	return &this
}

// NewLoginWithDefaults instantiates a new Login object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLoginWithDefaults() *Login {
	this := Login{}
	return &this
}

// GetUsername returns the Username field value
func (o *Login) GetUsername() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Username
}

// GetUsernameOk returns a tuple with the Username field value
// and a boolean to check if the value has been set.
func (o *Login) GetUsernameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Username, true
}

// SetUsername sets field value
func (o *Login) SetUsername(v string) {
	o.Username = v
}

// GetPassword returns the Password field value
func (o *Login) GetPassword() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Password
}

// GetPasswordOk returns a tuple with the Password field value
// and a boolean to check if the value has been set.
func (o *Login) GetPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Password, true
}

// SetPassword sets field value
func (o *Login) SetPassword(v string) {
	o.Password = v
}

func (o Login) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["username"] = o.Username
	}
	if true {
		toSerialize["password"] = o.Password
	}
	return json.Marshal(toSerialize)
}

type NullableLogin struct {
	value *Login
	isSet bool
}

func (v NullableLogin) Get() *Login {
	return v.value
}

func (v *NullableLogin) Set(val *Login) {
	v.value = val
	v.isSet = true
}

func (v NullableLogin) IsSet() bool {
	return v.isSet
}

func (v *NullableLogin) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLogin(val *Login) *NullableLogin {
	return &NullableLogin{value: val, isSet: true}
}

func (v NullableLogin) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLogin) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


