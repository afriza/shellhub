/*
ShellHub Community

ShellHub Community documentation.  It documents all routes provided by ShellHub Community.   NOTICE: THE API IS NOT STABLE YET; ERROR AND INCONSISTENCIES MAY OCCUR. 

API version: 0.1.0
Contact: contato@ossystems.com.br
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// UpdateDeviceNameRequest struct for UpdateDeviceNameRequest
type UpdateDeviceNameRequest struct {
	// Device's new name.
	Name string `json:"name"`
}

// NewUpdateDeviceNameRequest instantiates a new UpdateDeviceNameRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateDeviceNameRequest(name string) *UpdateDeviceNameRequest {
	this := UpdateDeviceNameRequest{}
	this.Name = name
	return &this
}

// NewUpdateDeviceNameRequestWithDefaults instantiates a new UpdateDeviceNameRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateDeviceNameRequestWithDefaults() *UpdateDeviceNameRequest {
	this := UpdateDeviceNameRequest{}
	return &this
}

// GetName returns the Name field value
func (o *UpdateDeviceNameRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *UpdateDeviceNameRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *UpdateDeviceNameRequest) SetName(v string) {
	o.Name = v
}

func (o UpdateDeviceNameRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateDeviceNameRequest struct {
	value *UpdateDeviceNameRequest
	isSet bool
}

func (v NullableUpdateDeviceNameRequest) Get() *UpdateDeviceNameRequest {
	return v.value
}

func (v *NullableUpdateDeviceNameRequest) Set(val *UpdateDeviceNameRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateDeviceNameRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateDeviceNameRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateDeviceNameRequest(val *UpdateDeviceNameRequest) *NullableUpdateDeviceNameRequest {
	return &NullableUpdateDeviceNameRequest{value: val, isSet: true}
}

func (v NullableUpdateDeviceNameRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateDeviceNameRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


